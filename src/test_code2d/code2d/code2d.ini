#
# Set up the equation of state parameters parameters
#
[TGammaLaw]
fGammaIndex          = 1.3             ; Adiabatic  Index
fEtaOverS            = 0.16            ; shear viscosity /s
fSigmaOverS          = 0.00001         ; bulk  viscosity /s
fKappaTOverS         = 0.00001         ; conductivity / s
fT0                  = 1.000           ; T0  The temperature at energy density E0
fE0                  = 5.0000          ; E0 The reference energy density
fTPi_EtaST           = 2.61            ; tau_pi/(eta/sT)
fL1_EtaTPi           = 0.766           ; lambda_1/(eta*tau_pi)
fL2_EtaTPi           = -1.06           ; lambda_2/(eta*tau_pi)

#
# Set up the  parameters for TEOSLat
#
[TEOSLat]
fEtaOverS            = 0.08000         ; shear viscosity /s
fSigmaOverS          = 0.00001         ; bulk viscosity /s
fKappaTOverS         = 0.00001         ; conductivity / s
fTPi_EtaST           = 2.61            ; tau_pi/(eta/sT)
fL1_EtaTPi           = 0.766           ; lambda_1/(eta*tau_pi)
fL2_EtaTPi           = -1.06           ; lambda_2/(eta*tau_pi)

[TEOSs95p]
fEtaOverS            = 0.08000         ; shear viscosity /s
fSigmaOverS          = 0.00001         ; bulk viscosity /s
fKappaTOverS         = 0.00001         ; conductivity / s
fTPi_EtaST           = 2.61            ; tau_pi/(eta/sT)
fL1_EtaTPi           = 0.766           ; lambda_1/(eta*tau_pi)
fL2_EtaTPi           = -1.06           ; lambda_2/(eta*tau_pi)

#
# Model Parameters
#
[TBRSSS]
fE0Cutoff            = 0.01            ; Controls how the simulation is cutoff at small energy density

#
# Input parameters for rnavierbjr
#
[TRNavier2DBj]
fICName              = TICPhobosMC     ; The name of the initial condition
fEOSName             = TEOSs95p         ; The underlying eos
fModelName           = TBRSSS          ; The name of the underlying model.
fReflected           = None            ; XY / Y / None

#
# Stepper parameters
#
[THydro2DBj]
fCFL                 = 0.2             ; The CFL number

#
# Set up the domain parameters
#
[TDomain2D]
fNx                  = 200             ; The number of grid points
fXmin                = -15.00000       ; The smallest value of x
xmax                 = 15.00000        ; The largest value of x for an even slice
fNy                  = 200             ; The number of grid points
fYmin                = -15.00000       ; The smallest value of x
ymax                 = 15.00000        ; The largest value of x for an even slice
# We choose this because the 2d stepper takes a time step
# of 0.1*dt to align the staggered grid. dt = 0.03 for the the
# parameters of this file. So this makes the first output to be at 0.6
fT0                  = 0.597           ; The starting time

# The default GSL random number generator is mt19937
# The default ROOT random number generator is the same. So use a different seed.
[TRNRandom]
fSeed                = 1               ; the seed for GSL_RNG (use 0 for default)
fSeedROOT            = 2               ; the seed for gRandom (use 0 for default)
fUseSeedFile         = False           ; read the random number state from nametag_gGSL_RNG.state and nametag_gRandom.state


#
# Read glauber
#
[TICGlauber2D]
fAtomicN             = 208.00000       ; The atomic number of the nucleus
fImpactP             = 12.6            ; The impact parameter of the collision
fSigma0              = 62.00000        ; The nucleon nucleon cross section
fICType              = 4               ; Inital Condition Type 1=sWN, 2=EnergyInit,3=eBC,4=mixture of swn and sbc controlled by fAlpha
fEnergyInit          = 140.60000       ; Initial energy density at center x=y=0 for fICType=2
fEntropyPerNW        = 32.50000        ; dS/deta/participant
fBaryonPerNW         = 0.000000        ; dN/deta/participant
fEpsilon0            = 1.e-4           ; A minimum energy density
fAlpha               = 0.11            ; a parameter interpolating binary and wounded nucleon scalings
fEnergyPerBC         = 22.73500        ; e= fEnergyPerBC * ncoll(b,x,y) for fICType=3
fInitBjICase         = 0               ; Controls how initial conditions are cutoff where hydro isn't valid   0= use default settings for TInitBj,  1 = read TInitBj from this file
fPhiAngle            = 0.              ; Rotate the setup by fPhiAngle in radians
fUseRandomBNotImpactP = 0               ; calling nextEvent() sets the impact parameterrandomly between fBmin and fBmax
fBmin                = 7.               ; Generate a random impact parameter between bmin and bmax
fBmax                = 7.               ; Generate a random impact parameter between bmin and bmax

#
# Set the freezeout parameters
#
[TFOSurface2DMaker]
# Coarsen
fCoarsen             = True            ; Coarsen the fosurface
fNumberOfEdges       = 10000            ; number of edges
# This is the frezeeout temperature. It corresponds to a temperature of 140 MeV in 1/fm units
# The name is because we are finding isosurfaces of constant temperature
fIsoValue            = 0.7095          ; The freezeout function
fFOType2D            = kConstT         ; The type of freezeout, freezeout at constant temperature
#
# Controls how to set the initial conditons for pi, default fCase=1 and C1 = 0.5
#
[TInitBj]
fCase                = 1               ; Strategy to cutoff Bj initial conditions near edge
fPCutoff             = 0.95000         ; Case=0 ... Cutoff when navier stokes prediction is fPCutoff*p
fCutoffC1            = 0.50000         ; Case=1 ... Pi= -eta*sigma/(1 + C1*(eta*sigma/p)^2)
fCutoffC2            = 0.02857         ; Case=2 ... Pi= -eta*sigma/(1 + C2*sqrt((eta*sigma/p)^2)
fEpsilon0            = 1.e-4           ; Add fEpislon0 to the expected value of energy density

#
# Set parameters for particle spectra
#
[TResoTableLoader]
fMesonBaryonDeltafRatio = 1.0             ; Cm/Cb (meson to baryon 'cross section')
fAlpha               = 0.0             ; energy dependence of relaxation time
fDefaultHadronList   = pip_list ; name of the default list of hadrons to compute

#
# Phobos Parameters
#
[TPhobosMC]
NucleusA             = Pb              ; A string specifying the nucleus A
NucleusB             = Pb              ; A string specifying the nucleus B
fXSect               = 62              ; NN inelastic XSection
fUseRandomB          = False            ; nextEvent() selects a random fB_MC between [fBMin, fBMax]
fB_MC                = 7.0             ; The impact parameter to use if fUseRandomB is false
fBMin                = 7.000              ; The minimum impact parameter if fUseRandomB
fBMax                = 7.001             ; The maximum impact parameter if fUseRandomB
fNpartMin            = 8               ; The minimum number of participants for event to be run
fEntropyModel        = TwoComponent    ; Selects how entropy is distributed. Allowed value is TwoComponent
fSmearingSigma       = 0.7             ; Each particpant is smeared by gaussian fSmearingWidth = sqrt(<r^2> =<x^2>+<y^2>)
fEntropyPerNW        = 32.5            ; Entropy per participant pair
fAlphaBC             = 0.11            ; Entropy per binary collision fraction
